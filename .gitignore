# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.development
.env.test
.env.production
.env.dev
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For PyCharm
#  Community Edition, use 'PyCharm CE'.  The details can be found at
#  https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
.idea/

# VS Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# FastAPI specific
*.db
*.sqlite
*.sqlite3

# AI/ML specific
models/
*.pkl
*.joblib
*.h5
*.hdf5
*.onnx
*.pt
*.pth
checkpoints/
wandb/

# Jupyter Notebooks
*.ipynb

# Data files
data/
datasets/
*.csv
*.json
*.xml
*.xlsx
*.xls
*.parquet

# Logs
logs/
*.log
app.log

# Temporary files
tmp/
temp/
*.tmp
*.temp

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Credentials and sensitive files
credentials/
secrets/
*.key
*.pem
*.crt
*.p12
*.pfx
service-account.json
gmail_service_account.json

# Vector databases
milvus_data/
qdrant_storage/
pinecone_index/

# Database files
*.db
*.sql
*.dump

# PDF and document files (if large)
# Uncomment if you don't want to track large files
# *.pdf
# *.docx
# *.doc

# Test files
test_files/
sample_resumes/
sample_jobs/

# Debug files
debug_*.py
test_*.py
quick_test.py
debug_resume.py
test_milvus_*.py

# Streamlit
.streamlit/

# Backup files
*.bak
*.backup
*~

# Runtime files
*.pid
*.sock

# Cache directories
.cache/
__pycache__/

# Node.js (if using frontend)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Next.js (if using Next.js frontend)
.next/
out/

# Vercel
.vercel

# Local environment files
.env*.local

# Docker
docker-compose.override.yml
.dockerignore

# Kubernetes
*.yaml.local
*.yml.local

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# Coverage reports
htmlcov/
.coverage

# Pytest
.pytest_cache/

# Tox
.tox/

# Virtual environments
venv*/
env*/
ENV*/

# IDEs
*.swp
*.swo
*~

# Temporary directories
tmp/
temp/
.tmp/

# Build artifacts
build/
dist/
*.egg-info/

# Package files
*.tar.gz
*.zip

# Local configuration overrides
config.local.py
settings.local.py

# Generated files
generated/
auto_generated/

# AI model files (if large)
# *.bin
# *.safetensors

# Hugging Face cache
.cache/huggingface/

# Sentence Transformers cache
.cache/torch/

# NLTK data
nltk_data/

# SpaCy models
spacy_models/
